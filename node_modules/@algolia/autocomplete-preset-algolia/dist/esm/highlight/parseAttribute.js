import { HIGHLIGHT_PRE_TAG, HIGHLIGHT_POST_TAG } from '../constants';
var htmlEscapes = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};
export function parseAttribute(_ref) {
  var highlightedValue = _ref.highlightedValue,
      _ref$ignoreEscape = _ref.ignoreEscape,
      ignoreEscape = _ref$ignoreEscape === void 0 ? [] : _ref$ignoreEscape;
  var unescapedHtmlRegex = new RegExp("[".concat(Object.keys(htmlEscapes).filter(function (character) {
    return ignoreEscape.indexOf(character) === -1;
  }).join(''), "]"), 'g');
  var hasUnescapedHtmlRegex = RegExp(unescapedHtmlRegex.source);

  function escape(value) {
    return hasUnescapedHtmlRegex.test(value) ? value.replace(unescapedHtmlRegex, function (key) {
      return htmlEscapes[key];
    }) : value;
  }

  var splitByPreTag = highlightedValue.split(HIGHLIGHT_PRE_TAG);
  var firstValue = splitByPreTag.shift();
  var elements = !firstValue ? [] : [{
    value: escape(firstValue),
    isHighlighted: false
  }];
  splitByPreTag.forEach(function (split) {
    var splitByPostTag = split.split(HIGHLIGHT_POST_TAG);
    elements.push({
      value: escape(splitByPostTag[0]),
      isHighlighted: true
    });

    if (splitByPostTag[1] !== '') {
      elements.push({
        value: escape(splitByPostTag[1]),
        isHighlighted: false
      });
    }
  });
  return elements;
}