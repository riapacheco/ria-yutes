{"version":3,"file":"index.development.js","sources":["../../../autocomplete-shared/dist/esm/invariant.js","../../../autocomplete-shared/dist/esm/warn.js","../../src/checkOptions.ts","../../src/createStore.ts","../../src/utils/flatten.ts","../../src/utils/generateAutocompleteId.ts","../../src/utils/getItemsCount.ts","../../src/utils/getNextSelectedItemId.ts","../../src/utils/noop.ts","../../src/utils/getNormalizedSources.ts","../../src/utils/getSelectedItem.ts","../../src/utils/isOrContainsNode.ts","../../src/getAutocompleteSetters.ts","../../src/getDefaultProps.ts","../../src/onInput.ts","../../src/onKeyDown.ts","../../src/getPropGetters.ts","../../src/getCompletion.ts","../../src/stateReducer.ts","../../src/createAutocomplete.ts","../../src/version.ts"],"sourcesContent":["/**\n * Throws an error if the condition is not met in development mode.\n * This is used to make development a better experience to provide guidance as\n * to where the error comes from.\n */\nexport function invariant(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (!condition) {\n    throw new Error(\"[Autocomplete] \".concat(message));\n  }\n}","export var warnCache = {\n  current: {}\n};\n/**\n * Logs a warning if the condition is not met.\n * This is used to log issues in development environment only.\n */\n\nexport function warn(condition, message) {\n  if (!(process.env.NODE_ENV !== 'production')) {\n    return;\n  }\n\n  if (condition) {\n    return;\n  }\n\n  var sanitizedMessage = message.trim();\n  var hasAlreadyPrinted = warnCache.current[sanitizedMessage];\n\n  if (!hasAlreadyPrinted) {\n    warnCache.current[sanitizedMessage] = true; // eslint-disable-next-line no-console\n\n    console.warn(\"[Autocomplete] \".concat(sanitizedMessage));\n  }\n}","import { warn } from '@algolia/autocomplete-shared';\n\nimport { AutocompleteOptions, BaseItem } from './types';\n\nexport function checkOptions<TItem extends BaseItem>(\n  options: AutocompleteOptions<TItem>\n) {\n  warn(\n    !options.debug,\n    'The `debug` option is meant for development debugging and should not be used in production.'\n  );\n}\n","import {\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n  Reducer,\n} from './types';\n\nexport function createStore<TItem extends BaseItem>(\n  reducer: Reducer,\n  props: InternalAutocompleteOptions<TItem>\n): AutocompleteStore<TItem> {\n  let state = props.initialState;\n\n  return {\n    getState() {\n      return state;\n    },\n    dispatch(action, payload) {\n      const prevState = { ...state };\n      state = reducer(state, {\n        type: action,\n        props,\n        payload,\n      });\n\n      props.onStateChange({ state, prevState });\n    },\n  };\n}\n","export function flatten<TType>(values: Array<TType | TType[]>): TType[] {\n  return values.reduce<TType[]>((a, b) => {\n    return a.concat(b);\n  }, []);\n}\n","let autocompleteId = 0;\n\nexport function generateAutocompleteId() {\n  return `autocomplete-${autocompleteId++}`;\n}\n","import { AutocompleteState } from '../types';\n\nexport function getItemsCount(state: AutocompleteState<any>) {\n  if (state.collections.length === 0) {\n    return 0;\n  }\n\n  return state.collections.reduce<number>(\n    (sum, collection) => sum + collection.items.length,\n    0\n  );\n}\n","/**\n * Returns the next selected item ID from the current state.\n *\n * We allow circular keyboard navigation from the base index.\n * The base index can either be `null` (nothing is highlighted) or `0`\n * (the first item is highlighted).\n * The base index is allowed to get assigned `null` only if\n * `props.defaultSelectedItemId` is `null`. This pattern allows to \"stop\"\n * by the actual query before navigating to other suggestions as seen on\n * Google or Amazon.\n *\n * @param moveAmount The offset to increment (or decrement) the last index\n * @param baseIndex The current index to compute the next index from\n * @param itemCount The number of items\n * @param defaultSelectedItemId The default selected index to fallback to\n */\nexport function getNextSelectedItemId(\n  moveAmount: number,\n  baseIndex: number | null,\n  itemCount: number,\n  defaultSelectedItemId: number | null\n): number | null {\n  if (\n    moveAmount < 0 &&\n    (baseIndex === null || (defaultSelectedItemId !== null && baseIndex === 0))\n  ) {\n    return itemCount + moveAmount;\n  }\n\n  const numericIndex = (baseIndex === null ? -1 : baseIndex) + moveAmount;\n\n  if (numericIndex <= -1 || numericIndex >= itemCount) {\n    return defaultSelectedItemId === null ? null : 0;\n  }\n\n  return numericIndex;\n}\n","export const noop = () => {};\n","import { invariant } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteSource,\n  BaseItem,\n  GetSources,\n  GetSourcesParams,\n  InternalAutocompleteSource,\n  InternalGetSources,\n} from '../types';\n\nimport { noop } from './noop';\n\nexport function getNormalizedSources<TItem extends BaseItem>(\n  getSources: GetSources<TItem>,\n  params: GetSourcesParams<TItem>\n): ReturnType<InternalGetSources<TItem>> {\n  return Promise.resolve(getSources(params)).then((sources) => {\n    invariant(\n      Array.isArray(sources),\n      `The \\`getSources\\` function must return an array of sources but returned type ${JSON.stringify(\n        typeof sources\n      )}:\\n\\n${JSON.stringify(sources, null, 2)}`\n    );\n\n    return Promise.all(\n      sources\n        // We allow `undefined` and `false` sources to allow users to use\n        // `Boolean(query) && source` (=> `false`).\n        // We need to remove these values at this point.\n        .filter((maybeSource: any): maybeSource is AutocompleteSource<TItem> =>\n          Boolean(maybeSource)\n        )\n        .map((source) => {\n          const normalizedSource: InternalAutocompleteSource<TItem> = {\n            getItemInputValue({ state }) {\n              return state.query;\n            },\n            getItemUrl() {\n              return undefined;\n            },\n            onSelect({ setIsOpen }) {\n              setIsOpen(false);\n            },\n            onHighlight: noop,\n            ...source,\n          };\n\n          return Promise.resolve(normalizedSource);\n        })\n    );\n  });\n}\n","import { AutocompleteCollection, AutocompleteState, BaseItem } from '../types';\n\n// We don't have access to the autocomplete source when we call `onKeyDown`\n// or `onClick` because those are native browser events.\n// However, we can get the source from the suggestion index.\nfunction getCollectionFromSelectedItemId<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n): AutocompleteCollection<TItem> | undefined {\n  // Given 3 sources with respectively 1, 2 and 3 suggestions: [1, 2, 3]\n  // We want to get the accumulated counts:\n  // [1, 1 + 2, 1 + 2 + 3] = [1, 3, 3 + 3] = [1, 3, 6]\n  const accumulatedCollectionsCount = state.collections\n    .map((collections) => collections.items.length)\n    .reduce<number[]>((acc, collectionsCount, index) => {\n      const previousValue = acc[index - 1] || 0;\n      const nextValue = previousValue + collectionsCount;\n\n      acc.push(nextValue);\n\n      return acc;\n    }, []);\n\n  // Based on the accumulated counts, we can infer the index of the suggestion.\n  const collectionIndex = accumulatedCollectionsCount.reduce((acc, current) => {\n    if (current <= state.selectedItemId!) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n\n  return state.collections[collectionIndex];\n}\n\n/**\n * Gets the highlighted index relative to a suggestion object (not the absolute\n * highlighted index).\n *\n * Example:\n *  [['a', 'b'], ['c', 'd', 'e'], ['f']]\n *                      â†‘\n *         (absolute: 3, relative: 1)\n */\nfunction getRelativeSelectedItemId<TItem extends BaseItem>({\n  state,\n  collection,\n}: {\n  state: AutocompleteState<TItem>;\n  collection: AutocompleteCollection<TItem>;\n}): number {\n  let isOffsetFound = false;\n  let counter = 0;\n  let previousItemsOffset = 0;\n\n  while (isOffsetFound === false) {\n    const currentCollection = state.collections[counter];\n\n    if (currentCollection === collection) {\n      isOffsetFound = true;\n      break;\n    }\n\n    previousItemsOffset += currentCollection.items.length;\n\n    counter++;\n  }\n\n  return state.selectedItemId! - previousItemsOffset;\n}\n\nexport function getSelectedItem<TItem extends BaseItem>(\n  state: AutocompleteState<TItem>\n) {\n  const collection = getCollectionFromSelectedItemId(state);\n\n  if (!collection) {\n    return null;\n  }\n\n  const item =\n    collection.items[getRelativeSelectedItemId({ state, collection })];\n  const source = collection.source;\n  const itemInputValue = source.getItemInputValue({ item, state });\n  const itemUrl = source.getItemUrl({ item, state });\n\n  return {\n    item,\n    itemInputValue,\n    itemUrl,\n    source,\n  };\n}\n","export function isOrContainsNode(parent: Node, child: Node) {\n  return parent === child || parent.contains(child);\n}\n","import {\n  AutocompleteApi,\n  AutocompleteCollection,\n  AutocompleteStore,\n  BaseItem,\n} from './types';\nimport { flatten } from './utils';\n\ninterface GetAutocompleteSettersOptions<TItem extends BaseItem> {\n  store: AutocompleteStore<TItem>;\n}\n\nexport function getAutocompleteSetters<TItem extends BaseItem>({\n  store,\n}: GetAutocompleteSettersOptions<TItem>) {\n  const setSelectedItemId: AutocompleteApi<TItem>['setSelectedItemId'] = (\n    value\n  ) => {\n    store.dispatch('setSelectedItemId', value);\n  };\n\n  const setQuery: AutocompleteApi<TItem>['setQuery'] = (value) => {\n    store.dispatch('setQuery', value);\n  };\n\n  const setCollections: AutocompleteApi<TItem>['setCollections'] = (\n    rawValue\n  ) => {\n    let baseItemId = 0;\n    const value = rawValue.map<AutocompleteCollection<TItem>>((collection) => ({\n      ...collection,\n      // We flatten the stored items to support calling `getAlgoliaHits`\n      // from the source itself.\n      items: flatten(collection.items as any).map((item: any) => ({\n        ...item,\n        __autocomplete_id: baseItemId++,\n      })),\n    }));\n\n    store.dispatch('setCollections', value);\n  };\n\n  const setIsOpen: AutocompleteApi<TItem>['setIsOpen'] = (value) => {\n    store.dispatch('setIsOpen', value);\n  };\n\n  const setStatus: AutocompleteApi<TItem>['setStatus'] = (value) => {\n    store.dispatch('setStatus', value);\n  };\n\n  const setContext: AutocompleteApi<TItem>['setContext'] = (value) => {\n    store.dispatch('setContext', value);\n  };\n\n  return {\n    setSelectedItemId,\n    setQuery,\n    setCollections,\n    setIsOpen,\n    setStatus,\n    setContext,\n  };\n}\n","import {\n  AutocompleteOptions,\n  BaseItem,\n  InternalAutocompleteOptions,\n  AutocompleteSubscribers,\n} from './types';\nimport {\n  generateAutocompleteId,\n  getItemsCount,\n  getNormalizedSources,\n  flatten,\n} from './utils';\n\nexport function getDefaultProps<TItem extends BaseItem>(\n  props: AutocompleteOptions<TItem>,\n  pluginSubscribers: AutocompleteSubscribers<TItem>\n): InternalAutocompleteOptions<TItem> {\n  const environment: InternalAutocompleteOptions<TItem>['environment'] = (typeof window !==\n  'undefined'\n    ? window\n    : {}) as typeof window;\n  const plugins = props.plugins || [];\n\n  return {\n    debug: false,\n    openOnFocus: false,\n    placeholder: '',\n    autoFocus: false,\n    defaultSelectedItemId: null,\n    stallThreshold: 300,\n    environment,\n    shouldPanelShow: ({ state }) => getItemsCount(state) > 0,\n    ...props,\n    // Since `generateAutocompleteId` triggers a side effect (it increments\n    // and internal counter), we don't want to execute it if unnecessary.\n    id: props.id ?? generateAutocompleteId(),\n    plugins,\n    // The following props need to be deeply defaulted.\n    initialState: {\n      selectedItemId: null,\n      query: '',\n      completion: null,\n      collections: [],\n      isOpen: false,\n      status: 'idle',\n      context: {},\n      ...props.initialState,\n    },\n    onStateChange(params) {\n      props.onStateChange?.(params);\n      plugins.forEach((x) => x.onStateChange?.(params));\n    },\n    onSubmit(params) {\n      props.onSubmit?.(params);\n      plugins.forEach((x) => x.onSubmit?.(params));\n    },\n    onReset(params) {\n      props.onReset?.(params);\n      plugins.forEach((x) => x.onReset?.(params));\n    },\n    getSources(params) {\n      return Promise.all(\n        [...plugins.map((plugin) => plugin.getSources), props.getSources]\n          .filter(Boolean)\n          .map((getSources) => getNormalizedSources(getSources!, params))\n      )\n        .then((nested) => flatten(nested))\n        .then((sources) =>\n          sources.map((source) => ({\n            ...source,\n            onSelect(params) {\n              source.onSelect(params);\n              pluginSubscribers.forEach((x) => x.onSelect?.(params));\n            },\n            onHighlight(params) {\n              source.onHighlight(params);\n              pluginSubscribers.forEach((x) => x.onHighlight?.(params));\n            },\n          }))\n        );\n    },\n    navigator: {\n      navigate({ itemUrl }) {\n        environment.location.assign(itemUrl);\n      },\n      navigateNewTab({ itemUrl }) {\n        const windowReference = environment.open(itemUrl, '_blank', 'noopener');\n        windowReference?.focus();\n      },\n      navigateNewWindow({ itemUrl }) {\n        environment.open(itemUrl, '_blank', 'noopener');\n      },\n      ...props.navigator,\n    },\n  };\n}\n","import { invariant } from '@algolia/autocomplete-shared';\n\nimport {\n  AutocompleteScopeApi,\n  AutocompleteState,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getSelectedItem } from './utils';\n\nlet lastStalledId: number | null = null;\n\ninterface OnInputParams<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: any;\n  /**\n   * The next partial state to apply after the function is called.\n   *\n   * This is useful when we call `onInput` in a different scenario than an\n   * actual input. For example, we use `onInput` when we click on an item,\n   * but we want to close the panel in that case.\n   */\n  nextState?: Partial<AutocompleteState<TItem>>;\n  props: InternalAutocompleteOptions<TItem>;\n  query: string;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onInput<TItem extends BaseItem>({\n  event,\n  nextState = {},\n  props,\n  query,\n  refresh,\n  store,\n  ...setters\n}: OnInputParams<TItem>): Promise<void> {\n  if (props.onInput) {\n    return Promise.resolve(\n      props.onInput({\n        query,\n        refresh,\n        state: store.getState(),\n        ...setters,\n      })\n    );\n  }\n\n  if (lastStalledId) {\n    props.environment.clearTimeout(lastStalledId);\n  }\n\n  const {\n    setCollections,\n    setIsOpen,\n    setQuery,\n    setSelectedItemId,\n    setStatus,\n  } = setters;\n\n  setQuery(query);\n  setSelectedItemId(props.defaultSelectedItemId);\n\n  if (query.length === 0 && props.openOnFocus === false) {\n    setStatus('idle');\n    setCollections(\n      store.getState().collections.map((collection) => ({\n        ...collection,\n        items: [],\n      }))\n    );\n    setIsOpen(\n      nextState.isOpen ?? props.shouldPanelShow({ state: store.getState() })\n    );\n\n    return Promise.resolve();\n  }\n\n  setStatus('loading');\n\n  lastStalledId = props.environment.setTimeout(() => {\n    setStatus('stalled');\n  }, props.stallThreshold);\n\n  return props\n    .getSources({\n      query,\n      refresh,\n      state: store.getState(),\n      ...setters,\n    })\n    .then((sources) => {\n      setStatus('loading');\n\n      // @TODO: convert `Promise.all` to fetching strategy.\n      return Promise.all(\n        sources.map((source) => {\n          return Promise.resolve(\n            source.getItems({\n              query,\n              refresh,\n              state: store.getState(),\n              ...setters,\n            })\n          ).then((items) => {\n            invariant(\n              Array.isArray(items),\n              `The \\`getItems\\` function must return an array of items but returned type ${JSON.stringify(\n                typeof items\n              )}:\\n\\n${JSON.stringify(items, null, 2)}`\n            );\n\n            return { source, items };\n          });\n        })\n      )\n        .then((collections) => {\n          setStatus('idle');\n          setCollections(collections as any);\n          setIsOpen(\n            nextState.isOpen ??\n              ((query.length === 0 && props.openOnFocus) ||\n                props.shouldPanelShow({ state: store.getState() }))\n          );\n\n          const highlightedItem = getSelectedItem(store.getState());\n\n          if (store.getState().selectedItemId !== null && highlightedItem) {\n            const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n            source.onHighlight({\n              event,\n              item,\n              itemInputValue,\n              itemUrl,\n              refresh,\n              source,\n              state: store.getState(),\n              ...setters,\n            });\n          }\n        })\n        .catch((error) => {\n          setStatus('error');\n\n          throw error;\n        })\n        .finally(() => {\n          if (lastStalledId) {\n            props.environment.clearTimeout(lastStalledId);\n          }\n        });\n    });\n}\n","import { onInput } from './onInput';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getSelectedItem } from './utils';\n\ninterface OnKeyDownOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  event: KeyboardEvent;\n  props: InternalAutocompleteOptions<TItem>;\n  store: AutocompleteStore<TItem>;\n}\n\nexport function onKeyDown<TItem extends BaseItem>({\n  event,\n  props,\n  refresh,\n  store,\n  ...setters\n}: OnKeyDownOptions<TItem>): void {\n  if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n    // Default browser behavior changes the caret placement on ArrowUp and\n    // Arrow down.\n    event.preventDefault();\n\n    store.dispatch(event.key, null);\n\n    const nodeItem = props.environment.document.getElementById(\n      `${props.id}-item-${store.getState().selectedItemId}`\n    );\n\n    if (nodeItem) {\n      if ((nodeItem as any).scrollIntoViewIfNeeded) {\n        (nodeItem as any).scrollIntoViewIfNeeded(false);\n      } else {\n        nodeItem.scrollIntoView(false);\n      }\n    }\n\n    const highlightedItem = getSelectedItem(store.getState());\n\n    if (store.getState().selectedItemId !== null && highlightedItem) {\n      const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n      source.onHighlight({\n        event,\n        item,\n        itemInputValue,\n        itemUrl,\n        refresh,\n        source,\n        state: store.getState(),\n        ...setters,\n      });\n    }\n  } else if (event.key === 'Escape') {\n    // This prevents the default browser behavior on `input[type=\"search\"]`\n    // from removing the query right away because we first want to close the\n    // panel.\n    event.preventDefault();\n\n    store.dispatch(event.key, null);\n  } else if (event.key === 'Enter') {\n    // No item is selected, so we let the browser handle the native `onSubmit`\n    // form event.\n    if (\n      store.getState().selectedItemId === null ||\n      store\n        .getState()\n        .collections.every((collection) => collection.items.length === 0)\n    ) {\n      return;\n    }\n\n    // This prevents the `onSubmit` event to be sent because an item is\n    // highlighted.\n    event.preventDefault();\n\n    const { item, itemInputValue, itemUrl, source } = getSelectedItem(\n      store.getState()\n    )!;\n\n    if (event.metaKey || event.ctrlKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewTab({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.shiftKey) {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigateNewWindow({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n      }\n    } else if (event.altKey) {\n      // Keep native browser behavior\n    } else {\n      if (itemUrl !== undefined) {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n        props.navigator.navigate({\n          itemUrl,\n          item,\n          state: store.getState(),\n        });\n\n        return;\n      }\n\n      onInput({\n        event,\n        nextState: { isOpen: false },\n        props,\n        query: itemInputValue,\n        refresh,\n        store,\n        ...setters,\n      }).then(() => {\n        source.onSelect({\n          event,\n          item,\n          itemInputValue,\n          itemUrl,\n          refresh,\n          source,\n          state: store.getState(),\n          ...setters,\n        });\n      });\n    }\n  }\n}\n","import { onInput } from './onInput';\nimport { onKeyDown } from './onKeyDown';\nimport {\n  AutocompleteScopeApi,\n  AutocompleteStore,\n  BaseItem,\n  GetEnvironmentProps,\n  GetFormProps,\n  GetInputProps,\n  GetItemProps,\n  GetLabelProps,\n  GetListProps,\n  GetPanelProps,\n  GetRootProps,\n  InternalAutocompleteOptions,\n} from './types';\nimport { getSelectedItem, isOrContainsNode } from './utils';\n\ninterface GetPropGettersOptions<TItem extends BaseItem>\n  extends AutocompleteScopeApi<TItem> {\n  store: AutocompleteStore<TItem>;\n  props: InternalAutocompleteOptions<TItem>;\n}\n\nexport function getPropGetters<\n  TItem extends BaseItem,\n  TEvent,\n  TMouseEvent,\n  TKeyboardEvent\n>({ props, refresh, store, ...setters }: GetPropGettersOptions<TItem>) {\n  const getEnvironmentProps: GetEnvironmentProps = (getterProps) => {\n    return {\n      // On touch devices, we do not rely on the native `blur` event of the\n      // input to close the panel, but rather on a custom `touchstart` event\n      // outside of the autocomplete elements.\n      // This ensures a working experience on mobile because we blur the input\n      // on touch devices when the user starts scrolling (`touchmove`).\n      onTouchStart(event) {\n        if (\n          store.getState().isOpen === false ||\n          event.target === getterProps.inputElement\n        ) {\n          return;\n        }\n\n        // @TODO: support cases where there are multiple Autocomplete instances.\n        // Right now, a second instance makes this computation return false.\n        const isTargetWithinAutocomplete = [\n          getterProps.formElement,\n          getterProps.panelElement,\n        ].some((contextNode) => {\n          return (\n            isOrContainsNode(contextNode, event.target as Node) ||\n            isOrContainsNode(\n              contextNode,\n              props.environment.document.activeElement!\n            )\n          );\n        });\n\n        if (isTargetWithinAutocomplete === false) {\n          store.dispatch('blur', null);\n        }\n      },\n      // When scrolling on touch devices (mobiles, tablets, etc.), we want to\n      // mimic the native platform behavior where the input is blurred to\n      // hide the virtual keyboard. This gives more vertical space to\n      // discover all the suggestions showing up in the panel.\n      onTouchMove(event: TouchEvent) {\n        if (\n          store.getState().isOpen === false ||\n          getterProps.inputElement !==\n            props.environment.document.activeElement ||\n          event.target === getterProps.inputElement\n        ) {\n          return;\n        }\n\n        getterProps.inputElement.blur();\n      },\n    };\n  };\n\n  const getRootProps: GetRootProps = (rest) => {\n    return {\n      role: 'combobox',\n      'aria-expanded': store.getState().isOpen,\n      'aria-haspopup': 'listbox',\n      'aria-owns': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getFormProps: GetFormProps<TEvent> = (providedProps) => {\n    const { inputElement, ...rest } = providedProps;\n\n    return {\n      action: '',\n      noValidate: true,\n      role: 'search',\n      onSubmit: (event) => {\n        ((event as unknown) as Event).preventDefault();\n\n        props.onSubmit({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('submit', null);\n        providedProps.inputElement?.blur();\n      },\n      onReset: (event) => {\n        ((event as unknown) as Event).preventDefault();\n\n        props.onReset({\n          event,\n          refresh,\n          state: store.getState(),\n          ...setters,\n        });\n\n        store.dispatch('reset', null);\n        providedProps.inputElement?.focus();\n      },\n      ...rest,\n    };\n  };\n\n  const getInputProps: GetInputProps<TEvent, TMouseEvent, TKeyboardEvent> = (\n    providedProps\n  ) => {\n    function onFocus(event: TEvent) {\n      // We want to trigger a query when `openOnFocus` is true\n      // because the panel should open with the current query.\n      if (props.openOnFocus || store.getState().query.length > 0) {\n        onInput({\n          event,\n          props,\n          query: store.getState().completion || store.getState().query,\n          refresh,\n          store,\n          ...setters,\n        });\n      }\n\n      store.dispatch('focus', null);\n    }\n\n    const isTouchDevice = 'ontouchstart' in props.environment;\n    const { inputElement, maxLength = 512, ...rest } = providedProps || {};\n    const selectedItem = getSelectedItem(store.getState());\n\n    return {\n      'aria-autocomplete': 'both',\n      'aria-activedescendant':\n        store.getState().isOpen && store.getState().selectedItemId !== null\n          ? `${props.id}-item-${store.getState().selectedItemId}`\n          : undefined,\n      'aria-controls': store.getState().isOpen ? `${props.id}-list` : undefined,\n      'aria-labelledby': `${props.id}-label`,\n      value: store.getState().completion || store.getState().query,\n      id: `${props.id}-input`,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      autoCapitalize: 'off',\n      enterKeyHint: selectedItem?.itemUrl ? 'go' : 'search',\n      spellCheck: 'false',\n      autoFocus: props.autoFocus,\n      placeholder: props.placeholder,\n      maxLength,\n      type: 'search',\n      onChange: (event) => {\n        onInput({\n          event,\n          props,\n          query: (((event as unknown) as Event)\n            .currentTarget as HTMLInputElement).value.slice(0, maxLength),\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onKeyDown: (event) => {\n        onKeyDown({\n          event: (event as unknown) as KeyboardEvent,\n          props,\n          refresh,\n          store,\n          ...setters,\n        });\n      },\n      onFocus,\n      onBlur: () => {\n        // We do rely on the `blur` event on touch devices.\n        // See explanation in `onTouchStart`.\n        if (!isTouchDevice) {\n          store.dispatch('blur', null);\n        }\n      },\n      onClick: (event) => {\n        // When the panel is closed and you click on the input while\n        // the input is focused, the `onFocus` event is not triggered\n        // (default browser behavior).\n        // In an autocomplete context, it makes sense to open the panel in this\n        // case.\n        // We mimic this event by catching the `onClick` event which\n        // triggers the `onFocus` for the panel to open.\n        if (\n          providedProps.inputElement ===\n            props.environment.document.activeElement &&\n          !store.getState().isOpen\n        ) {\n          onFocus((event as unknown) as TEvent);\n        }\n      },\n      ...rest,\n    };\n  };\n\n  const getLabelProps: GetLabelProps = (rest) => {\n    return {\n      htmlFor: `${props.id}-input`,\n      id: `${props.id}-label`,\n      ...rest,\n    };\n  };\n\n  const getListProps: GetListProps = (rest) => {\n    return {\n      role: 'listbox',\n      'aria-labelledby': `${props.id}-label`,\n      id: `${props.id}-list`,\n      ...rest,\n    };\n  };\n\n  const getPanelProps: GetPanelProps<TMouseEvent> = (rest) => {\n    return {\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the panel so\n        // that the blur event is not triggered, otherwise it closes the\n        // panel.\n        ((event as unknown) as MouseEvent).preventDefault();\n      },\n      onMouseLeave() {\n        store.dispatch('mouseleave', null);\n      },\n      ...rest,\n    };\n  };\n\n  const getItemProps: GetItemProps<any, TMouseEvent> = (providedProps) => {\n    const { item, source, ...rest } = providedProps;\n\n    return {\n      id: `${props.id}-item-${item.__autocomplete_id}`,\n      role: 'option',\n      'aria-selected':\n        store.getState().selectedItemId === item.__autocomplete_id,\n      onMouseMove(event) {\n        if (item.__autocomplete_id === store.getState().selectedItemId) {\n          return;\n        }\n\n        store.dispatch('mousemove', item.__autocomplete_id);\n\n        const highlightedItem = getSelectedItem(store.getState());\n\n        if (store.getState().selectedItemId !== null && highlightedItem) {\n          const { item, itemInputValue, itemUrl, source } = highlightedItem;\n\n          source.onHighlight({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        }\n      },\n      onMouseDown(event) {\n        // Prevents the `activeElement` from being changed to the item so it\n        // can remain with the current `activeElement`.\n        ((event as unknown) as MouseEvent).preventDefault();\n      },\n      onClick(event) {\n        const itemInputValue = source.getItemInputValue({\n          item,\n          state: store.getState(),\n        });\n        const itemUrl = source.getItemUrl({\n          item,\n          state: store.getState(),\n        });\n\n        // If `getItemUrl` is provided, it means that the suggestion\n        // is a link, not plain text that aims at updating the query.\n        // We can therefore skip the state change because it will update\n        // the `selectedItemId`, resulting in a UI flash, especially\n        // noticeable on mobile.\n        const runPreCommand = itemUrl\n          ? Promise.resolve()\n          : onInput({\n              event,\n              nextState: { isOpen: false },\n              props,\n              query: itemInputValue,\n              refresh,\n              store,\n              ...setters,\n            });\n\n        runPreCommand.then(() => {\n          source.onSelect({\n            event,\n            item,\n            itemInputValue,\n            itemUrl,\n            refresh,\n            source,\n            state: store.getState(),\n            ...setters,\n          });\n        });\n      },\n      ...rest,\n    };\n  };\n\n  return {\n    getEnvironmentProps,\n    getRootProps,\n    getFormProps,\n    getLabelProps,\n    getInputProps,\n    getPanelProps,\n    getListProps,\n    getItemProps,\n  };\n}\n","import { AutocompleteState, BaseItem } from './types';\nimport { getSelectedItem } from './utils';\n\ninterface GetCompletionProps<TItem extends BaseItem> {\n  state: AutocompleteState<TItem>;\n}\n\nexport function getCompletion<TItem extends BaseItem>({\n  state,\n}: GetCompletionProps<TItem>): string | null {\n  if (state.isOpen === false || state.selectedItemId === null) {\n    return null;\n  }\n\n  const { itemInputValue } = getSelectedItem(state)!;\n\n  return itemInputValue || null;\n}\n","import { invariant } from '@algolia/autocomplete-shared';\n\nimport { getCompletion } from './getCompletion';\nimport { Reducer } from './types';\nimport { getItemsCount, getNextSelectedItemId } from './utils';\n\nexport const stateReducer: Reducer = (state, action) => {\n  switch (action.type) {\n    case 'setSelectedItemId': {\n      return {\n        ...state,\n        selectedItemId: action.payload,\n      };\n    }\n\n    case 'setQuery': {\n      return {\n        ...state,\n        query: action.payload,\n        completion: null,\n      };\n    }\n\n    case 'setCollections': {\n      return {\n        ...state,\n        collections: action.payload,\n      };\n    }\n\n    case 'setIsOpen': {\n      return {\n        ...state,\n        isOpen: action.payload,\n      };\n    }\n\n    case 'setStatus': {\n      return {\n        ...state,\n        status: action.payload,\n      };\n    }\n\n    case 'setContext': {\n      return {\n        ...state,\n        context: {\n          ...state.context,\n          ...action.payload,\n        },\n      };\n    }\n\n    case 'ArrowDown': {\n      const nextState = {\n        ...state,\n        selectedItemId: getNextSelectedItemId(\n          1,\n          state.selectedItemId,\n          getItemsCount(state),\n          action.props.defaultSelectedItemId\n        ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'ArrowUp': {\n      const nextState = {\n        ...state,\n        selectedItemId: getNextSelectedItemId(\n          -1,\n          state.selectedItemId,\n          getItemsCount(state),\n          action.props.defaultSelectedItemId\n        ),\n      };\n\n      return {\n        ...nextState,\n        completion: getCompletion({ state: nextState }),\n      };\n    }\n\n    case 'Escape': {\n      if (state.isOpen) {\n        return {\n          ...state,\n          isOpen: false,\n          completion: null,\n        };\n      }\n\n      return {\n        ...state,\n        query: '',\n        status: 'idle',\n        collections: [],\n      };\n    }\n\n    case 'submit': {\n      return {\n        ...state,\n        selectedItemId: null,\n        isOpen: false,\n        status: 'idle',\n      };\n    }\n\n    case 'reset': {\n      return {\n        ...state,\n        selectedItemId:\n          // Since we open the panel on reset when openOnFocus=true\n          // we need to restore the highlighted index to the defaultSelectedItemId. (DocSearch use-case)\n\n          // Since we close the panel when openOnFocus=false\n          // we lose track of the highlighted index. (Query-suggestions use-case)\n          action.props.openOnFocus === true\n            ? action.props.defaultSelectedItemId\n            : null,\n        status: 'idle',\n        query: '',\n      };\n    }\n\n    case 'focus': {\n      return {\n        ...state,\n        selectedItemId: action.props.defaultSelectedItemId,\n        isOpen: action.props.openOnFocus || state.query.length > 0,\n      };\n    }\n\n    case 'blur': {\n      if (action.props.debug) {\n        return state;\n      }\n\n      return {\n        ...state,\n        isOpen: false,\n        selectedItemId: null,\n      };\n    }\n\n    case 'mousemove': {\n      return {\n        ...state,\n        selectedItemId: action.payload,\n      };\n    }\n\n    case 'mouseleave': {\n      return {\n        ...state,\n        selectedItemId: action.props.defaultSelectedItemId,\n      };\n    }\n\n    default:\n      invariant(\n        false,\n        `The reducer action ${JSON.stringify(action.type)} is not supported.`\n      );\n\n      return state;\n  }\n};\n","import { checkOptions } from './checkOptions';\nimport { createStore } from './createStore';\nimport { getAutocompleteSetters } from './getAutocompleteSetters';\nimport { getDefaultProps } from './getDefaultProps';\nimport { getPropGetters } from './getPropGetters';\nimport { onInput } from './onInput';\nimport { stateReducer } from './stateReducer';\nimport {\n  AutocompleteApi,\n  AutocompleteOptions,\n  BaseItem,\n  AutocompleteSubscribers,\n} from './types';\n\nexport function createAutocomplete<\n  TItem extends BaseItem,\n  TEvent = Event,\n  TMouseEvent = MouseEvent,\n  TKeyboardEvent = KeyboardEvent\n>(\n  options: AutocompleteOptions<TItem>\n): AutocompleteApi<TItem, TEvent, TMouseEvent, TKeyboardEvent> {\n  checkOptions(options);\n\n  const subscribers: AutocompleteSubscribers<TItem> = [];\n  const props = getDefaultProps(options, subscribers);\n  const store = createStore(stateReducer, props);\n\n  const setters = getAutocompleteSetters({ store });\n  const propGetters = getPropGetters<\n    TItem,\n    TEvent,\n    TMouseEvent,\n    TKeyboardEvent\n  >({ props, refresh, store, ...setters });\n\n  function refresh() {\n    return onInput({\n      event: new Event('input'),\n      nextState: { isOpen: store.getState().isOpen },\n      props,\n      query: store.getState().query,\n      refresh,\n      store,\n      ...setters,\n    });\n  }\n\n  props.plugins.forEach((plugin) =>\n    plugin.subscribe?.({\n      ...setters,\n      onSelect(fn) {\n        subscribers.push({ onSelect: fn });\n      },\n      onHighlight(fn) {\n        subscribers.push({ onHighlight: fn });\n      },\n    })\n  );\n\n  return {\n    refresh,\n    ...propGetters,\n    ...setters,\n  };\n}\n","export const version = '1.0.0-alpha.38';\n"],"names":["invariant","condition","message","Error","concat","warnCache","current","warn","sanitizedMessage","trim","hasAlreadyPrinted","console","checkOptions","options","process","debug","createStore","reducer","props","state","initialState","getState","dispatch","action","payload","prevState","type","onStateChange","flatten","values","reduce","a","b","autocompleteId","generateAutocompleteId","getItemsCount","collections","length","sum","collection","items","getNextSelectedItemId","moveAmount","baseIndex","itemCount","defaultSelectedItemId","numericIndex","noop","getNormalizedSources","getSources","params","Promise","resolve","then","sources","Array","isArray","JSON","stringify","all","filter","maybeSource","Boolean","map","source","normalizedSource","getItemInputValue","query","getItemUrl","undefined","onSelect","setIsOpen","onHighlight","getCollectionFromSelectedItemId","accumulatedCollectionsCount","acc","collectionsCount","index","previousValue","nextValue","push","collectionIndex","selectedItemId","getRelativeSelectedItemId","isOffsetFound","counter","previousItemsOffset","currentCollection","getSelectedItem","item","itemInputValue","itemUrl","isOrContainsNode","parent","child","contains","getAutocompleteSetters","store","setSelectedItemId","value","setQuery","setCollections","rawValue","baseItemId","__autocomplete_id","setStatus","setContext","getDefaultProps","pluginSubscribers","environment","window","plugins","openOnFocus","placeholder","autoFocus","stallThreshold","shouldPanelShow","id","completion","isOpen","status","context","forEach","x","onSubmit","onReset","plugin","nested","navigator","navigate","location","assign","navigateNewTab","windowReference","open","focus","navigateNewWindow","lastStalledId","onInput","event","nextState","refresh","setters","clearTimeout","setTimeout","getItems","highlightedItem","catch","error","finally","onKeyDown","key","preventDefault","nodeItem","document","getElementById","scrollIntoViewIfNeeded","scrollIntoView","every","metaKey","ctrlKey","shiftKey","altKey","getPropGetters","getEnvironmentProps","getterProps","onTouchStart","target","inputElement","isTargetWithinAutocomplete","formElement","panelElement","some","contextNode","activeElement","onTouchMove","blur","getRootProps","rest","role","getFormProps","providedProps","noValidate","getInputProps","onFocus","isTouchDevice","maxLength","selectedItem","autoComplete","autoCorrect","autoCapitalize","enterKeyHint","spellCheck","onChange","currentTarget","slice","onBlur","onClick","getLabelProps","htmlFor","getListProps","getPanelProps","onMouseDown","onMouseLeave","getItemProps","onMouseMove","runPreCommand","getCompletion","stateReducer","createAutocomplete","subscribers","propGetters","Event","subscribe","fn","version"],"mappings":"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"}